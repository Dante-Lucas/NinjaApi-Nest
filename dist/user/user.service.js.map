{"version":3,"sources":["../../src/user/user.service.ts"],"sourcesContent":["import { Injectable } from '@nestjs/common';\nimport { AuthService } from 'src/apps/auth/auth.service';\nimport { PrismaService } from 'src/infra/prisma/prisma.service';\nimport { UserDto, LoginDto } from 'src/dto/user/user.dto';\nimport { randomInt } from 'crypto';\n\n@Injectable()\nexport class UserService {\n  constructor(\n    private readonly auth: AuthService,\n    private readonly prisma: PrismaService,\n  ) {}\n\n  async find(data: UserDto | LoginDto) {\n    return this.prisma.user.findUnique({ where: { email: data.email } });\n  }\n\n  async findAll() {\n    return this.prisma.user.findMany();\n  }\n\n  async create(data: UserDto) {\n    const salt: number = randomInt(10, 16);\n    const password = await this.auth.passwordHash(data.password, salt);\n    return this.prisma.user.create({\n      data: { username: data.username, email: data.email, password: password },\n    });\n  }\n}\n"],"names":["UserService","find","data","prisma","user","findUnique","where","email","findAll","findMany","create","salt","randomInt","password","auth","passwordHash","username","constructor"],"mappings":";;;;+BAOaA;;;eAAAA;;;wBAPc;6BACC;+BACE;wBAEJ;;;;;;;;;;AAGnB,IAAA,AAAMA,cAAN,MAAMA;IAMX,MAAMC,KAAKC,IAAwB,EAAE;QACnC,OAAO,IAAI,CAACC,MAAM,CAACC,IAAI,CAACC,UAAU,CAAC;YAAEC,OAAO;gBAAEC,OAAOL,KAAKK,KAAK;YAAC;QAAE;IACpE;IAEA,MAAMC,UAAU;QACd,OAAO,IAAI,CAACL,MAAM,CAACC,IAAI,CAACK,QAAQ;IAClC;IAEA,MAAMC,OAAOR,IAAa,EAAE;QAC1B,MAAMS,OAAeC,IAAAA,iBAAS,EAAC,IAAI;QACnC,MAAMC,WAAW,MAAM,IAAI,CAACC,IAAI,CAACC,YAAY,CAACb,KAAKW,QAAQ,EAAEF;QAC7D,OAAO,IAAI,CAACR,MAAM,CAACC,IAAI,CAACM,MAAM,CAAC;YAC7BR,MAAM;gBAAEc,UAAUd,KAAKc,QAAQ;gBAAET,OAAOL,KAAKK,KAAK;gBAAEM,UAAUA;YAAS;QACzE;IACF;IAnBAI,YACE,AAAiBH,IAAiB,EAClC,AAAiBX,MAAqB,CACtC;aAFiBW,OAAAA;aACAX,SAAAA;IAChB;AAiBL"}