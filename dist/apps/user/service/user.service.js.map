{"version":3,"sources":["../../../../src/apps/user/service/user.service.ts"],"sourcesContent":["import { PasswordService } from 'src/apps/auth/services/password.service';\nimport { HttpException, HttpStatus, Injectable } from '@nestjs/common';\nimport { PrismaService } from 'src/infra/prisma/prisma.service';\nimport { UserDto } from 'src/dto/user/user.dto';\nimport { findId } from '@prisma/client/sql';\nimport { randomInt } from 'crypto';\n\n@Injectable()\nexport class UserService {\n  constructor(\n    private readonly password: PasswordService,\n    private readonly prisma: PrismaService,\n  ) {}\n\n  async listUsers() {\n    return await this.prisma.user.findMany();\n  }\n  async findByEmail(email: string) {\n    return await this.prisma.user.findFirst({ where: { email: email } });\n  }\n  async createUser(data: UserDto) {\n    const password = await this.password.passwordHash(\n      data.password,\n      randomInt(10, 16),\n    );\n    return await this.prisma.user.create({\n      data: {\n        username: data.username,\n        email: data.email,\n        password: password,\n      },\n    });\n  }\n  async findUser(id: number) {\n    const user = await this.prisma.$queryRawTyped(findId(id));\n    if (!user) {\n      throw new HttpException('User not found', HttpStatus.NOT_FOUND);\n    }\n    return user;\n  }\n}\n"],"names":["UserService","listUsers","prisma","user","findMany","findByEmail","email","findFirst","where","createUser","data","password","passwordHash","randomInt","create","username","findUser","id","$queryRawTyped","findId","HttpException","HttpStatus","NOT_FOUND","constructor"],"mappings":";;;;+BAQaA;;;eAAAA;;;iCARmB;wBACsB;+BACxB;qBAEP;wBACG;;;;;;;;;;AAGnB,IAAA,AAAMA,cAAN,MAAMA;IAMX,MAAMC,YAAY;QAChB,OAAO,MAAM,IAAI,CAACC,MAAM,CAACC,IAAI,CAACC,QAAQ;IACxC;IACA,MAAMC,YAAYC,KAAa,EAAE;QAC/B,OAAO,MAAM,IAAI,CAACJ,MAAM,CAACC,IAAI,CAACI,SAAS,CAAC;YAAEC,OAAO;gBAAEF,OAAOA;YAAM;QAAE;IACpE;IACA,MAAMG,WAAWC,IAAa,EAAE;QAC9B,MAAMC,WAAW,MAAM,IAAI,CAACA,QAAQ,CAACC,YAAY,CAC/CF,KAAKC,QAAQ,EACbE,IAAAA,iBAAS,EAAC,IAAI;QAEhB,OAAO,MAAM,IAAI,CAACX,MAAM,CAACC,IAAI,CAACW,MAAM,CAAC;YACnCJ,MAAM;gBACJK,UAAUL,KAAKK,QAAQ;gBACvBT,OAAOI,KAAKJ,KAAK;gBACjBK,UAAUA;YACZ;QACF;IACF;IACA,MAAMK,SAASC,EAAU,EAAE;QACzB,MAAMd,OAAO,MAAM,IAAI,CAACD,MAAM,CAACgB,cAAc,CAACC,IAAAA,WAAM,EAACF;QACrD,IAAI,CAACd,MAAM;YACT,MAAM,IAAIiB,qBAAa,CAAC,kBAAkBC,kBAAU,CAACC,SAAS;QAChE;QACA,OAAOnB;IACT;IA9BAoB,YACE,AAAiBZ,QAAyB,EAC1C,AAAiBT,MAAqB,CACtC;aAFiBS,WAAAA;aACAT,SAAAA;IAChB;AA4BL"}