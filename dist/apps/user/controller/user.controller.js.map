{"version":3,"sources":["../../../../src/apps/user/controller/user.controller.ts"],"sourcesContent":["import { UserService } from '../service/user.service';\nimport { UserDto } from 'src/dto/user/user.dto';\nimport {\n  Body,\n  Controller,\n  Get,\n  HttpCode,\n  HttpStatus,\n  Param,\n  ParseIntPipe,\n  Post,\n} from '@nestjs/common';\nimport {\n  ApiBearerAuth,\n  ApiCreatedResponse,\n  ApiNotFoundResponse,\n  ApiOkResponse,\n  ApiTags,\n} from '@nestjs/swagger';\n\n@ApiTags('User')\n@Controller('user')\nexport class UserController {\n  constructor(private readonly user: UserService) {}\n\n  @ApiBearerAuth()\n  @ApiOkResponse({ type: UserDto, isArray: true })\n  @Get()\n  @HttpCode(HttpStatus.OK)\n  listUsers() {\n    return this.user.listUsers();\n  }\n\n  @ApiCreatedResponse({ type: UserDto })\n  @Post()\n  @HttpCode(HttpStatus.CREATED)\n  createUser(@Body() data: UserDto) {\n    return this.user.createUser(data);\n  }\n\n  @ApiBearerAuth()\n  @ApiNotFoundResponse({ description: 'User not found' })\n  @ApiOkResponse({ type: UserDto })\n  @Get(':id')\n  @HttpCode(HttpStatus.OK)\n  findUser(@Param('id', ParseIntPipe) id: number) {\n    return this.user.findUser(id);\n  }\n}\n"],"names":["UserController","listUsers","user","createUser","data","findUser","id","constructor","type","UserDto","isArray","OK","CREATED","description"],"mappings":";;;;+BAsBaA;;;eAAAA;;;6BAtBe;yBACJ;wBAUjB;yBAOA;;;;;;;;;;;;;;;AAIA,IAAA,AAAMA,iBAAN,MAAMA;IAOXC,YAAY;QACV,OAAO,IAAI,CAACC,IAAI,CAACD,SAAS;IAC5B;IAKAE,WAAW,AAAQC,IAAa,EAAE;QAChC,OAAO,IAAI,CAACF,IAAI,CAACC,UAAU,CAACC;IAC9B;IAOAC,SAAS,AAA2BC,EAAU,EAAE;QAC9C,OAAO,IAAI,CAACJ,IAAI,CAACG,QAAQ,CAACC;IAC5B;IAxBAC,YAAY,AAAiBL,IAAiB,CAAE;aAAnBA,OAAAA;IAAoB;AAyBnD;;;;QAtBmBM,MAAMC,gBAAO;QAAEC,SAAS;;;6CAEpBC;;;;;;;QAKCH,MAAMC,gBAAO;;;6CAEdG;;;;;;;;;;;QAMEC,aAAa;;;QACnBL,MAAMC,gBAAO;;;6CAETE"}